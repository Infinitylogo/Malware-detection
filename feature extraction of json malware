        ################ Dynamic analysis#####################    

import os
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials
auth.authenticate_user()
gauth=GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

link = 'https://drive.google.com/file/d/13rmnrPsnoqjRBflDq6e59bW_YoaDeGxx/view?usp=sharing'

downloaded = drive.CreateFile({'id':link}) 
downloaded.GetContentFile('dataset.tar')
import tarfile
tar = tarfile.open("dataset.tar")
path = tar.extractall('DS/')
tar.close()
path = Path.cwd().joinpath("DS/dataset/")
path.ls()
data = ImageDataBunch.from_folder(path, ds_tfms=get_transforms(), size=224)
data.show_batch(rows=3, figsize=(7,6))
print(data.c)
print( data.classes)

learn = create_cnn(data, model.resnet34, metrics = error_rate)
learn.model
learn.fit_one_cycle(4)
learn.fit_one_cycle(10)

interp = ClassificationInterpretation.from_learner(learn)
losses,idxs =  interp.top_losses()
interp.plot_top_losses(9,figsize=(9,6))

learn.lr_find()
learn.recorder.plot()

sub = pd.read_csv('sampleSubmission.csv' , sep = ',')

y_pred5=learn.predict_classes(X_test, verbose=1)
sub.Sentiment=y_pred5
sub.to_csv('sub5_CNN.csv',index=False)
sub.head()


###########################STATIC ANALYSIS########################

import os
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials
auth.authenticate_user()
gauth=GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

link = 'https://drive.google.com/file/d/1XfnQMagW-yclH-wHZZRvYJHZSBExXzZu/view?usp=sharing'

downloaded = drive.CreateFile({'id':link}) 
downloaded.GetContentFile('dataset.tar')
import tarfile
tar = tarfile.open("dataset.tar")
path = tar.extractall('DS/')
tar.close()
path = Path.cwd().joinpath("DS/dataset/")
path.ls()
data = ImageDataBunch.from_folder(path, ds_tfms=get_transforms(), size=224)
data.show_batch(rows=3, figsize=(7,6))
print(data.c)
print( data.classes)

learn = create_cnn(data, model.resnet34, metrics = error_rate)
learn.model
learn.fit_one_cycle(4)
learn.fit_one_cycle(10)

interp = ClassificationInterpretation.from_learner(learn)
losses,idxs =  interp.top_losses()
interp.plot_top_losses(9,figsize=(9,6))

learn.lr_find()
learn.recorder.plot()

sub = pd.read_csv('sampleSubmission1.csv' , sep = ',')

y_pred5=learn.predict_classes(X_test, verbose=1)
sub.Sentiment=y_pred5
sub.to_csv('sub5_CNN.csv',index=False)
sub.head()
